# Data directories.
assets/
checkpoints/
data/
wandb/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
data/*

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
data_collector_1/*
checkpoints/*
assets/*
datasets/*
# Data directories.
/mnt/data1/ZhouZhiqiang/openpi/assets/
/mnt/data1/ZhouZhiqiang/openpi/checkpoints/
/mnt/data1/ZhouZhiqiang/openpi/data/
/mnt/data1/ZhouZhiqiang/openpi/wandb/

# Byte-compiled / optimized / DLL files
/mnt/data1/ZhouZhiqiang/openpi/__pycache__/
/mnt/data1/ZhouZhiqiang/openpi/*.py[cod]
/mnt/data1/ZhouZhiqiang/openpi/*$py.class

# C extensions
/mnt/data1/ZhouZhiqiang/openpi/*.so

# Distribution / packaging
/mnt/data1/ZhouZhiqiang/openpi/.Python
/mnt/data1/ZhouZhiqiang/openpi/build/
/mnt/data1/ZhouZhiqiang/openpi/develop-eggs/
/mnt/data1/ZhouZhiqiang/openpi/dist/
/mnt/data1/ZhouZhiqiang/openpi/downloads/
/mnt/data1/ZhouZhiqiang/openpi/eggs/
/mnt/data1/ZhouZhiqiang/openpi/.eggs/
/mnt/data1/ZhouZhiqiang/openpi/lib/
/mnt/data1/ZhouZhiqiang/openpi/lib64/
/mnt/data1/ZhouZhiqiang/openpi/parts/
/mnt/data1/ZhouZhiqiang/openpi/sdist/
/mnt/data1/ZhouZhiqiang/openpi/var/
/mnt/data1/ZhouZhiqiang/openpi/wheels/
/mnt/data1/ZhouZhiqiang/openpi/share/python-wheels/
/mnt/data1/ZhouZhiqiang/openpi/*.egg-info/
/mnt/data1/ZhouZhiqiang/openpi/.installed.cfg
/mnt/data1/ZhouZhiqiang/openpi/*.egg
/mnt/data1/ZhouZhiqiang/openpi/MANIFEST

# PyInstaller
# ?Usually these files are written by a python script from a template
# ?before PyInstaller builds the exe, so as to inject date/other infos into it.
/mnt/data1/ZhouZhiqiang/openpi/*.manifest
/mnt/data1/ZhouZhiqiang/openpi/*.spec

# Installer logs
/mnt/data1/ZhouZhiqiang/openpi/pip-log.txt
/mnt/data1/ZhouZhiqiang/openpi/pip-delete-this-directory.txt

# Unit test / coverage reports
/mnt/data1/ZhouZhiqiang/openpi/htmlcov/
/mnt/data1/ZhouZhiqiang/openpi/.tox/
/mnt/data1/ZhouZhiqiang/openpi/.nox/
/mnt/data1/ZhouZhiqiang/openpi/.coverage
/mnt/data1/ZhouZhiqiang/openpi/.coverage.*
/mnt/data1/ZhouZhiqiang/openpi/.cache
/mnt/data1/ZhouZhiqiang/openpi/nosetests.xml
/mnt/data1/ZhouZhiqiang/openpi/coverage.xml
/mnt/data1/ZhouZhiqiang/openpi/*.cover
/mnt/data1/ZhouZhiqiang/openpi/*.py,cover
/mnt/data1/ZhouZhiqiang/openpi/.hypothesis/
/mnt/data1/ZhouZhiqiang/openpi/.pytest_cache/
/mnt/data1/ZhouZhiqiang/openpi/cover/

# Translations
/mnt/data1/ZhouZhiqiang/openpi/*.mo
/mnt/data1/ZhouZhiqiang/openpi/*.pot

# Django stuff:
/mnt/data1/ZhouZhiqiang/openpi/*.log
/mnt/data1/ZhouZhiqiang/openpi/local_settings.py
/mnt/data1/ZhouZhiqiang/openpi/db.sqlite3
/mnt/data1/ZhouZhiqiang/openpi/db.sqlite3-journal
/mnt/data1/ZhouZhiqiang/openpi/data/*

# Flask stuff:
/mnt/data1/ZhouZhiqiang/openpi/instance/
/mnt/data1/ZhouZhiqiang/openpi/.webassets-cache

# Scrapy stuff:
/mnt/data1/ZhouZhiqiang/openpi/.scrapy

# Sphinx documentation
/mnt/data1/ZhouZhiqiang/openpi/docs/_build/

# PyBuilder
/mnt/data1/ZhouZhiqiang/openpi/.pybuilder/
/mnt/data1/ZhouZhiqiang/openpi/target/

# Jupyter Notebook
/mnt/data1/ZhouZhiqiang/openpi/.ipynb_checkpoints

# IPython
/mnt/data1/ZhouZhiqiang/openpi/profile_default/
/mnt/data1/ZhouZhiqiang/openpi/ipython_config.py

# pyenv
# ? For a library or package, you might want to ignore these files since the code is
# ? intended to run in multiple environments; otherwise, check them in:
# /mnt/data1/ZhouZhiqiang/openpi/.python-version

# pipenv
# ? According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
# ? However, in case of collaboration, if having platform-specific dependencies or dependencies
# ? having no cross-platform support, pipenv may install dependencies that don't work, or not
# ? install all needed dependencies.
#/mnt/data1/ZhouZhiqiang/openpi/Pipfile.lock

# poetry
# ? Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
# ? This is especially recommended for binary packages to ensure reproducibility, and is more
# ? commonly ignored for libraries.
# ? https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#/mnt/data1/ZhouZhiqiang/openpi/poetry.lock

# pdm
# ? Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#/mnt/data1/ZhouZhiqiang/openpi/pdm.lock
# ? pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
# ? in version control.
# ? https://pdm.fming.dev/latest/usage/project/#working-with-version-control
/mnt/data1/ZhouZhiqiang/openpi/.pdm.toml
/mnt/data1/ZhouZhiqiang/openpi/.pdm-python
/mnt/data1/ZhouZhiqiang/openpi/.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
/mnt/data1/ZhouZhiqiang/openpi/__pypackages__/

# Celery stuff
/mnt/data1/ZhouZhiqiang/openpi/celerybeat-schedule
/mnt/data1/ZhouZhiqiang/openpi/celerybeat.pid

# SageMath parsed files
/mnt/data1/ZhouZhiqiang/openpi/*.sage.py

# Environments
/mnt/data1/ZhouZhiqiang/openpi/.env
/mnt/data1/ZhouZhiqiang/openpi/.venv
/mnt/data1/ZhouZhiqiang/openpi/env/
/mnt/data1/ZhouZhiqiang/openpi/venv/
/mnt/data1/ZhouZhiqiang/openpi/ENV/
/mnt/data1/ZhouZhiqiang/openpi/env.bak/
/mnt/data1/ZhouZhiqiang/openpi/venv.bak/

# Spyder project settings
/mnt/data1/ZhouZhiqiang/openpi/.spyderproject
/mnt/data1/ZhouZhiqiang/openpi/.spyproject

# Rope project settings
/mnt/data1/ZhouZhiqiang/openpi/.ropeproject

# mkdocs documentation
/mnt/data1/ZhouZhiqiang/openpi//site

# mypy
/mnt/data1/ZhouZhiqiang/openpi/.mypy_cache/
/mnt/data1/ZhouZhiqiang/openpi/.dmypy.json
/mnt/data1/ZhouZhiqiang/openpi/dmypy.json

# Pyre type checker
/mnt/data1/ZhouZhiqiang/openpi/.pyre/

# pytype static type analyzer
/mnt/data1/ZhouZhiqiang/openpi/.pytype/

# Cython debug symbols
/mnt/data1/ZhouZhiqiang/openpi/cython_debug/

# PyCharm
# ?JetBrains specific template is maintained in a separate JetBrains.gitignore that can
# ?be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# ?and can be added to the global gitignore or merged into this file. ?For a more nuclear
# ?option (not recommended) you can uncomment the following to ignore the entire idea folder.
#/mnt/data1/ZhouZhiqiang/openpi/.idea/
/mnt/data1/ZhouZhiqiang/openpi/data_collector_1/*
/mnt/data1/ZhouZhiqiang/openpi/checkpoints/*
/mnt/data1/ZhouZhiqiang/openpi/assets/*
/mnt/data1/ZhouZhiqiang/openpi/datasets/*
/mnt/data1/ZhouZhiqiang/openpi/data_collector_1/*
/mnt/data1/ZhouZhiqiang/openpi/checkpoints/*
/mnt/data1/ZhouZhiqiang/openpi/assets/*
/mnt/data1/ZhouZhiqiang/openpi/datasets/*
/mnt/data1/ZhouZhiqiang/openpi/data_collector_test/*
data_collector_test/*
